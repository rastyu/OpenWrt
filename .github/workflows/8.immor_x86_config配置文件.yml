#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions

name: 8.immor_x86_config配置文件

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'true开启SSH连接配置固件'
        required: false
        default: 'true'
        type: boolean
      openwrt:
        description: "选择config版本"
        required: false
        default: "router/immor/openwrt-21.02-base.config"
        type: choice
        options:
          - router/immor/openwrt-21.02-base.config
          - router/immor/openwrt-21.02-mini.config
          - router/immor/openwrt-21.02.config
          - router/immor/immor-master-base.config
          - router/immor/immor-master.config
      BRANCH:
        description: "选择编译版本"
        required: false
        default: "openwrt-21.02"
        type: choice
        options:
          - openwrt-21.02
          - master

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: ${{ inputs.BRANCH }}
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: ${{ inputs.openwrt }}
  DIY_P1_SH: immor-part1.sh
  DIY_P2_SH: immor-part2.sh
  UPLOAD_CONFIG: false
  UPLOAD_RELEASE: true
  FILE_NAME: config配置文件
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main
        
    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
        sudo -E apt -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
        sudo -E apt update
        sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt -y autoremove --purge
        sudo -E systemctl daemon-reload
        sudo -E apt clean && sudo -E apt autoclean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo "status=success" >> ${GITHUB_OUTPUT}
        df -Th

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "FILE_TIME=$(date "+%Y年%m月%d日%H点")" >> $GITHUB_ENV
        
    - name: 加载自定义设置
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: 下载插件
      run: cd openwrt && ./scripts/feeds update -a

    - name: 读取插件
      run: cd openwrt && ./scripts/feeds install -a

    - name: 更改设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        
    - name: SSH 连接配置config文件
      uses: P3TERX/ssh2actions@main
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_TO }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        
    - name: 生成"${{matrix.target}}"配置文件
      id: compileop
      run: |
        cd openwrt
        make defconfig > /dev/null 2>&1
        ./scripts/diffconfig.sh > ${GITHUB_WORKSPACE}/${CONFIG_FILE}
        cp -Rf ${GITHUB_WORKSPACE}/${CONFIG_FILE} ${GITHUB_WORKSPACE}/config.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: 上传.config配置文件在 github actions
      if: env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FILE_TIME }} for ${{ env.FILE_NAME }}
        path: config.txt

    - name: 发布至release
      if: env.UPLOAD_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.FILE_TIME }} for ${{ env.FILE_NAME }}
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.FILE_NAME }}
        commit: main
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: config.txt
        
    - name: 电报消息提醒
      run: curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_TO }}&text=恭喜主人,您的自定义config文件上传完成！%0A编译时间：${{ env.FILE_TIME }}%0A下载地址：https://github.com/rastyu/s905x3-openwrt/releases/tag/config%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"
